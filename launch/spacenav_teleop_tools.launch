<launch>
    <!-- The package has 2 examples of converting joystick commands to servo commands.
         This is the higher-latency, Python-based teleop_tools example.
         You can modify it in your own package for your own type of gamepad or joystick.
         We do plan to accept pull requests of config files for other controller types using this method.
    -->
    <group ns="arm">
<!--        &lt;!&ndash; This node publishes commands from the controller &ndash;&gt;-->
<!--        <node name="spacenav_node" pkg="spacenav_node" type="spacenav_node"/>-->

<!--        &lt;!&ndash; This node does the servoing calculations &ndash;&gt;-->
<!--        <node name="servo_server" pkg="moveit_servo" type="servo_server" output="screen">-->
<!--            <param name="parameter_ns" type="string" value="optional_parameter_namespace"/>-->
<!--            <rosparam ns="optional_parameter_namespace" command="load"-->
<!--                      file="$(find moveit_servo)/config/ur_simulated_config.yaml"/>-->
<!--        </node>-->

<!--        &lt;!&ndash; teleop_tools translates a joystick command into a twist message &ndash;&gt;-->
<!--        <arg name="cmd_vel" default="spacenav/joy"/>-->
<!--        <arg name="teleop_config" default="$(find moveit_servo)/config/spacenav_via_teleop_tools.yaml"/>-->
<!--        <rosparam file="$(arg teleop_config)" command="load"/>-->


<!--        <arg name="dev" default="/dev/input/js0"/>-->
<!--        &lt;!&ndash; Launch joy node &ndash;&gt;-->
<!--        <node pkg="joy" type="joy_node" name="joy">-->
<!--            <param name="dev"-->
<!--                   value="$(arg dev)"/> &lt;!&ndash; Customize this to match the location your joystick is plugged in on&ndash;&gt;-->
<!--            <param name="deadzone" value="0.2"/>-->
<!--            <param name="autorepeat_rate" value="40"/>-->
<!--            <param name="coalesce_interval" value="0.025"/>-->
<!--        </node>-->


<!--        <node pkg="joy_teleop" type="joy_teleop.py" name="joy_teleop">-->
<!--            <remap from="cmd_vel" to="$(arg cmd_vel)"/>-->
<!--            &lt;!&ndash;    <remap from="joy" to="spacenav/joy" />&ndash;&gt;-->
<!--        </node>-->

        <arg name="config" default="$(find moveit_servo)/config/elite_simulated_config.yaml"/>

        <!-- This node publishes commands from the controller -->
        <node name="spacenav_node" pkg="spacenav_node" type="spacenav_node"/>

        <!-- This node does the servoing calculations -->
        <node name="servo_server" pkg="moveit_servo" type="servo_server" output="screen">
            <rosparam command="load" file="$(arg config)"/>
        </node>

        <!-- teleop_tools translates a joystick command into a twist message -->
        <arg name="cmd_vel" default="spacenav/joy"/>
        <arg name="teleop_config" default="$(find moveit_servo)/config/spacenav_via_teleop_tools.yaml"/>
        <rosparam file="$(arg teleop_config)" command="load"/>

        <node pkg="joy_teleop" type="joy_teleop.py" name="joy_teleop">
            <remap from="cmd_vel" to="$(arg cmd_vel)"/>
            <remap from="joy" to="spacenav/joy"/>
        </node>
    </group>

</launch>
